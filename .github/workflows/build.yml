# name: build

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:

#   build:
#     strategy:
#       matrix:
#         platform: [ ubuntu-latest ]
#         go-version: [ 1.17 ]
#     name: Build
#     runs-on: ${{ matrix.platform }}
#     steps:

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: ${{ matrix.go-version }}

#       - name: Check out code into the Go module directory
#         uses: actions/checkout@v2

#       - name: Get dependencies
#         run: |
#           sudo apt-get update
#           sudo apt-get -y install gcc-mingw-w64-x86-64
#           sudo apt-get -y install gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
#           sudo apt-get -y install gcc-aarch64-linux-gnu libc6-dev-arm64-cross
#           go get -v -t -d ./...
#           if [ -f Gopkg.toml ]; then
#               curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#               dep ensure
#           fi
#       - name: Build linux
#         run: |
#           CC=gcc CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -trimpath -o aoaostar_mooc_linux_amd64/aoaostar_mooc main.go
#           CC=aarch64-linux-gnu-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm64 go build -trimpath -o aoaostar_mooc_linux_arm64/aoaostar_mooc main.go
#           CC=arm-linux-gnueabihf-gcc CGO_ENABLED=1 GOOS=linux GOARCH=arm go build -trimpath -o aoaostar_mooc_linux_arm/aoaostar_mooc main.go
#       - name: Build windows
#         run: |
#           CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -trimpath -tags forceposix -o aoaostar_mooc_windows_amd64/aoaostar_mooc.exe main.go
#       - name: Build linux_386
#         run: |
#           sudo apt-get -y install libc6-dev-i386
#           CC=gcc CGO_ENABLED=1 GOOS=linux GOARCH=386 go build -trimpath -o aoaostar_mooc_linux_386/aoaostar_mooc main.go

#       - name: Build linux_s390x
#         run: |
#           sudo apt-get update && sudo apt-get install -y gcc-s390x-linux-gnu g++-s390x-linux-gnu
#           GOOS=linux GOARCH=s390x go build -trimpath -o yh_s390x/myapp_s390x main.go
#       # - name: Copy additional files
#       #   run: |
#       #     ls | grep "aoaostar_mooc_" | awk '{ print "cp sample.config.json "$0"/config.json" | "/bin/bash" }'
#       #     ls | grep "aoaostar_mooc_" | awk '{ print "cp -r view "$0"/view" | "/bin/bash" }'
#       #     ls | grep "windows" | awk '{ print "cp -r scripts/*.bat "$0"" | "/bin/bash" }'

#       - name: Upload artifacts linux_amd64
#         uses: actions/upload-artifact@v4
#         with:
#           name: aoaostar_mooc_linux_amd64
#           path: aoaostar_mooc_linux_amd64

#       - name: Upload artifacts linux_arm64
#         uses: actions/upload-artifact@v4
#         with:
#           name: aoaostar_mooc_linux_arm64
#           path: aoaostar_mooc_linux_arm64

#       - name: Upload artifacts linux_arm
#         uses: actions/upload-artifact@v4
#         with:
#           name: aoaostar_mooc_linux_arm
#           path: aoaostar_mooc_linux_arm

#       - name: Upload artifacts windows_amd64
#         uses: actions/upload-artifact@v4
#         with:
#           name: aoaostar_mooc_windows_amd64
#           path: aoaostar_mooc_windows_amd64

#       - name: Upload artifacts linux_386
#         uses: actions/upload-artifact@v4
#         with:
#           name: aoaostar_mooc_linux_386
#           path: aoaostar_mooc_linux_386

#       - name: Upload artifacts linux_s390x
#         uses: actions/upload-artifact@v4  
#         with:
#           name: yh_s390x
#           path: yh_s390x


name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.17 ]
    name: Build
    runs-on: ${{ matrix.platform }}
    steps:

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-s390x-linux-gnu g++-s390x-linux-gnu
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build s390x
        run: |
          GOOS=linux GOARCH=s390x go build -trimpath -o myapp_s390x main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./myapp_s390x
          asset_name: myapp_s390x
          asset_content_type: application/octet-stream    
